{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://08-js-service-calls/./src/message.js","webpack://08-js-service-calls/./src/services.js","webpack://08-js-service-calls/./src/state.js","webpack://08-js-service-calls/./src/view.js","webpack://08-js-service-calls/webpack/bootstrap","webpack://08-js-service-calls/webpack/runtime/define property getters","webpack://08-js-service-calls/webpack/runtime/hasOwnProperty shorthand","webpack://08-js-service-calls/webpack/runtime/make namespace object","webpack://08-js-service-calls/./src/main.js"],"sourcesContent":["const MESSAGES = {\n    'network-error': \"Server unavailable, please try again!\",\n    'invalid-word': \"Invalid Word. Word must be letters, please try again!\",\n    'required-word': \"Word is required, please try again!\",\n    'auth-missing': \"Session id is invalid.\",\n    'auth-insufficient': \"Wrong Username! Please try again!\",\n    'required-username': \"Invalid Username. Username can contain only letters or numbers.\",\n    default: \"Something went wrong, please try again!\",\n  };\n\n  export default MESSAGES;","// This is a sample file that demonstrates\n// how you can write an abstraction around\n// a fetch() call\n// This exported function returns a promise\n// that resolves with data\n// or rejects with an error object\n//\n// The caller of this function can decide\n// what to do with the data\n// or what to do with the error\n//\n// You can add to this file and use this function\n// or write your own files/functions\n\nexport function fetchLogin(username) {\n  return fetch('/api/session/', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json', // set this header when sending JSON in the body of request\n    },\n    body: JSON.stringify( { username } ),\n  })\n  // fetch() rejects on network error\n  // So we convert that to a formatted error object\n  // so our caller can handle all \"errors\" in a similar way\n  .catch( err => Promise.reject({ error: 'network-error' }) )\n  .then( response => {\n    if(!response.ok) {  // response.ok checks the status code from the service\n      // This service returns JSON on errors,\n      // so we use that as the error object and reject\n      return response.json().then( err => Promise.reject(err) );\n    }\n    return response.json(); // happy status code means resolve with data from service\n  });\n}\n\nexport function fetchLogout() {\n  return fetch('/api/session', {\n    method: 'DELETE'\n  })\n  .catch( err => Promise.reject({ error: 'network-error' }) )\n  .then( response => {\n    if(!response.ok) {  // response.ok checks the status code from the service\n      return response.json().then( err => Promise.reject(err) );\n    }\n    return response.json(); // happy status code means resolve with data from service\n  });\n}\n\nexport function fetchSession() {\n  return fetch('/api/session')\n    .catch( err => Promise.reject({ error: 'network-error' }) )\n    .then( response => {\n      if(!response.ok) {  // response.ok checks the status code from the service\n        return response.json().then( err => Promise.reject(err) );\n      }\n      return response.json(); // happy status code means resolve with data from service\n    });\n}\n\nexport function fetchWord() {\n  return fetch('/api/word')\n    .catch( err => Promise.reject({ error: 'network-error' }) )\n    .then( response => {\n      if(!response.ok) {  // response.ok checks the status code from the service\n        return response.json().then( err => Promise.reject(err) );\n      }\n      return response.json(); // happy status code means resolve with data from service\n    });\n}\n\nexport function updateWord(word) {\n  return fetch('/api/word/', {\n    method: 'PUT',\n    headers: {\n      'content-type': 'application/json', // set this header when sending JSON in the body of request\n    },\n    body: JSON.stringify( { word } ),\n  })\n  .catch( err => Promise.reject({ error: 'network-error' }) )\n  .then( response => {\n    if(!response.ok) {  // response.ok checks the status code from the service\n      return response.json().then( err => Promise.reject(err) );\n    }\n    return response.json(); // happy status code means resolve with data from service\n  });\n}","const state = {\n  username: \"\",\n  storedWord: \"\",\n  updatedWord: \"\"\n};\n\nstate.clear = function() {\n  state.username = \"\";\n  state.storedWord = \"\";\n  state.updatedWord = \"\";\n};\n\nexport default state;","function generateHomePageHtml({state, message}) {\n  return `\n    <div class=\"user\">\n      <p class=\"user-greeting\">Hello <span class=\"user-title\">${state.username}</span></p>\n      <div class=\"logout-form\">\n        <button type=\"submit\" class=\"logout-to-submit\">Logout</button>\n      </div>\n      <div class=\"word\">\n        <div class=\"stored-word\">\n          <span>Stored word:</span>${state.storedWord ? `<span class=\"stored-word-content\">${state.storedWord}</span>` : `<span class=\"no-data\">No word, please update your word.</span>`}\n        </div>\n        <div class=\"word-form\">\n          ${message ? `<p class=\"word-message\">${message}</p>` : \"\"}\n          <label class=\"word-label\">\n            <span>Update Word:</span>\n            <input type=\"text\" name=\"word\" class=\"word-to-send\" value=\"${state.updatedWord}\" placeholder=\"Enter your word\" />\n          </label>\n          <button type=\"submit\" class=\"word-to-submit\">Save</button>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction generateLoginPageHtml(message) {\n  return `\n    <div class=\"login\">\n      <p class=\"login-greeting\">Welcome to Service Calls!</p>\n      <div class=\"login-main\">\n        ${message ? `<p class=\"login-message\">${message}</p>` : \"\"}\n        <div class=\"login-form\">\n          <label class=\"login-label\">\n            <span>Username:</span>\n            <input type=\"text\" name=\"username\" class=\"login-to-send\" value=\"\" placeholder=\"Enter your username\"/>\n          </label>\n          <button type=\"submit\" class=\"login-to-submit\">Login</button>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nexport function renderHomePage({state, message, rootEl}) {\n  const homePageHtml = generateHomePageHtml({state, message});\n  rootEl.innerHTML = `${homePageHtml}`;\n}\n\nexport function renderLoginPage({message, rootEl}) {\n  const loginPageHtml = generateLoginPageHtml(message);\n  rootEl.innerHTML = `${loginPageHtml}`;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {renderHomePage, renderLoginPage} from './view'; // Offer the render methods to generate HTML\nimport state from './state'; // 'state' holds the user's state\nimport {fetchSession, fetchLogin, fetchWord, updateWord, fetchLogout} from './services'; // Offer fetch() calls to communicate with the server\nimport MESSAGES from './message'; // 'MESSAGES' translate the server's Error Messages to user friendly\n\nconst rootEl = document.querySelector('.root');\n\nrootEl.addEventListener('click', (e) => {\n    if(e.target.classList.contains('login-to-submit')) { // Click the \"Login\" button\n\n        fetchLogin(state.username)\n        .then( res => {\n            // If the call to login is successful, call to get the stored word\n            return fetchWord();\n        })\n        .then((res) => {    \n            // If the call to get stored word is successful, update the user's state and show the Word View  \n            state.clear();\n            state.storedWord = res.storedWord;\n            state.username = res.username;\n            renderHomePage({state, rootEl});\n        })\n        .catch( err => {\n            // If the call to login or get stored word is unsuccessful, show Login Page with an error message\n            const message = MESSAGES[err.error] || MESSAGES.default;\n            goLoginPage(message);\n        });\n\n        return;\n    }\n\n    if(e.target.classList.contains('word-to-submit')) { // Click the \"Save\" word button\n\n        updateWord(state.updatedWord)\n        .then((res) => {\n            // If the call to update the word is successful, update the user's state and show the Word View\n            state.storedWord = res.storedWord;\n            state.updatedWord = \"\"; // After update the word, the updatedWord need to be reset to \"\"\n            renderHomePage({state, rootEl});\n        })\n        .catch( err => {\n            let message = MESSAGES[err.error] || MESSAGES.default;\n            if(err.error == 'invalid-word' || err.error == 'required-word') { // If it is the server's Error Messages: 'invalid-word' and 'required-word', stay in the Word View with an error message\n                message = `${message}`;\n                state.updatedWord = \"\";\n                renderHomePage({state, message, rootEl});\n            } else { // Otherwise, show Login Page with an error message\n                goLoginPage(message);\n            }\n        });\n\n        return;\n    }\n\n    if(e.target.classList.contains('logout-to-submit')) { // Click the \"Logout\" button\n\n        fetchLogout()\n        .then((res) => {\n            // If the call to logout is successful, show Login Page\n            goLoginPage();\n        })\n        .catch( err => {\n            // If the call to logout is unsuccessful, show Login Page with an error message\n            const message = MESSAGES[err.error] || MESSAGES.default;\n            goLoginPage(message);\n        });\n\n        return;\n    }\n});\n\nrootEl.addEventListener('input', (e) => {\n    if(e.target.classList.contains('login-to-send')) { // The value of the username input has changed\n        state.username = e.target.value;\n        return;\n    }\n\n    if(e.target.classList.contains('word-to-send')) { // The value of the word input has changed\n        state.updatedWord = e.target.value;\n        return;\n    }\n});\n\nfunction goLoginPage(message) {\n    state.clear(); // Clear the user's state\n    renderLoginPage({message, rootEl}); // Render the Login Page\n}\n\n\nfunction init() {\n\n    // Check for an existing session\n    fetchSession()\n    .then( res => {\n        // If there is a session, call to get the stored word\n        return fetchWord();\n    })\n    .then((res) => {\n        // If the call to get stored word is successful, update the user's state and show the Word View  \n        state.storedWord = res.storedWord;\n        state.username = res.username;\n        renderHomePage({state, rootEl});\n    })\n    .catch( err => {\n        // If there is not an existing session or the call to get stored word is unsuccessful, show Login Page\n        goLoginPage();\n    });\n\n}\n\n/* Runs on load */\ninit();"],"names":["MESSAGES","fetchLogin","username","fetch","method","headers","body","JSON","stringify","err","Promise","reject","error","then","response","ok","json","fetchLogout","fetchSession","fetchWord","updateWord","word","state","storedWord","updatedWord","clear","generateHomePageHtml","_ref","message","concat","generateLoginPageHtml","renderHomePage","_ref2","rootEl","homePageHtml","innerHTML","renderLoginPage","_ref3","loginPageHtml","document","querySelector","addEventListener","e","target","classList","contains","res","goLoginPage","value","init"],"sourceRoot":""}